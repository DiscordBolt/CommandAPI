group 'com.discordbolt.api'
version '2.0-SNAPSHOT'

buildscript {
    ext {
        discord4jVersion = "v3-SNAPSHOT"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        // Discord 4J
        url  "https://jitpack.io"
    }
}

dependencies {
    // Discord4J
    implementation "com.discord4j.discord4j:discord4j-core:$discord4jVersion"
    // Reflection (For finding commands)
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'
    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
}

task defineVersion(dependsOn: processResources) {
    doLast {
        file("$buildDir/resources/main/application.properties").withWriter { w ->
            Properties p = new Properties()
            p.load(new FileInputStream(new File('src/main/resources/application.properties')))
            p['commands.version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn defineVersion
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}